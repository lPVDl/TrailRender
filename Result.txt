На выполнение задачи ушло 10 часов.
Созданные скрипты лежат по пути Assets/Scripts/TrailRendering
Билд лежит в папке Build. Собрано под Windows с mono

Идеи для оптимизации:
- Т.к. мы знаем скорость снаряда, можно в теории пропускать попытки добавления новых сегментов. К примеру, если снаряд летит со скоростью 60u/с, частота кадров 60fps, длина сегмента 10u, то новые сегменты можно добавлять каждые 10 кадров, можно сэкономить на вычислении расстояния и чтении памяти (расположение последнего сегмента).
- Неплохо бы убрать Schedule().Complete() в джобсе по построению меша, в идеале бы вызвать начало построение сразу после получения данных о всех позициях, а завершить прямо перед отрисовкой, чтобы максимально утилизировать cpu ресурсы.
- Можно воспользоваться геометрическим шейдером, который будет сам создавать необходимую геометрию (преобразовывать точки в квадраты), должно крайне положительно отразиться на производительности, т.к. уменьшится кол-во передаваемых данных на gpu.
- Можно перенести отрисовку полностью на gpu через инстансинг. Можно передавать начальную точку, начальное ускорение, прошедшее время. На основе этих данных можно вычислить траекторию и построить необходимый след на gpu.
- Можно попробовать не отрисовывать наиболее отдаленные следы, в случае когда их "слишком много", либо можно уменьшать им топологию, используя другой буфер / способ отрисовки.